name: "Delete Version Tags or Branches"

on:
  workflow_dispatch:
    inputs:
      versionsToDelete:
        description: "Provide the version to delete a tag or branch in this format 'x.y.z'."
        default: '-'
        required: true
      branchesToDelete:
        description: "Provide branches to be deleted."
        default: '-'
        required: true

defaults:
  run:
    shell: bash
jobs:
  delete-tags:
    name: "Delete Git tags"
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Delete Git tags
      #   run: |
      #     git config user.email "amirraza2221@gmail.com"
      #     git config user.name "Delete Pipeline"
          
      #     # set -e
      #     TAG_PATTERN="[0-9]+.[0-9]+.[0-9]+$"

      #     # Get a list of all tags matching the pattern
      #     tags=$(git tag --list --sort=-version:refname | grep -E "$TAG_PATTERN")

      #     if [[ -z "$tags" ]]; then
      #       echo "No tags matching the pattern $TAG_PATTERN found."
      #       exit 0
      #     fi

      #     echo "Tags matching the pattern $TAG_PATTERN:"
      #     echo "$tags"
      #     echo "Tags to be deleted: ${{ github.event.inputs.versionsToDelete }}"

      #     # Split the versionsToDelete parameter by comma
      #     IFS=',' read -ra delete_tags_array <<< "${{ github.event.inputs.versionsToDelete }}"

      #     for delete_tag in "${delete_tags_array[@]}"; do
      #       if [[ "$delete_tag" =~ $TAG_PATTERN ]]; then
      #         git tag -d "$delete_tag"
      #         git push --delete origin "$delete_tag"
      #         echo "Tag '$delete_tag' deleted successfully."
      #       else
      #         echo "Skipping deletion of tag '$delete_tag' as it doesn't match the pattern $TAG_PATTERN."
      #       fi
      #     done

      #     echo "Tags deleted successfully."

  delete-branches:
    name: "Delete Git branches"
    runs-on: ubuntu-22.04
    needs: delete-tags

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Delete Remote Branches
        run: |
          echo "Working first line"
          git config user.email "amirraza2221@gmail.com"
          git config user.name "Delete Pipeline"
          echo "Working second line"
          IFS=',' read -ra branchesToDeleteArray <<< "${{ github.event.inputs.branchesToDelete }}"
          echo "Working third line '$branchesToDeleteArray' array "
          for branch in "${branchesToDeleteArray[@]}"; do
            echo "Processing branch: $branch"
            
            # Check if the branch name is 'master'
            if [ "$branch" = "master" ]; then
              echo "Cannot delete master branch"
              continue
            fi
            
            # Attempt to delete the branch
            git push origin --delete "$branch"
            
            if [ $? -eq 0 ]; then
              echo "Remote branch '$branch' deleted successfully."
            else
              echo "Failed to delete branch '$branch'. It may not exist."
            fi
          done
          
          # for branch in "${branchesToDeleteArray[@]}"; do
          #   echo "Working fourth line"
          #   if [[ "$branch" =~ "master" ]]; then
          #     echo "Cannot delete master branch"
          #     continue
          #   fi
          
          #   git push origin --delete "$branch"
          #   echo "Remote branch '$branch' deleted successfully."
